1) create private subnet and print it's ID, something like this:
invoke this function inside main function
private_subnet_id = create_subnet("vpc-0598d9d2ea79d8cea", "10.10.1.128/17")
print(f'print private subnet id {private_subnet_id}')

we can use this fucntion for subnet creation
def create_subnet(vpc_id, cidr_block):
    response = ec2_client.create_subnet(VpcId=vpc_id, CidrBlock=cidr_block)
    subnet = response.get("Subnet")
    subnet_id = subnet.get("SubnetId")
    return subnet_id


2) Create new router table without route configuration:
    invoke this function inside main function

    private_rtb_id = create_route_table_without_route("vpc-0598d9d2ea79d8cea")
    print(f'print private route table id {private_rtb_id}')

    def create_route_table_without_route(vpc_id, name):
        response = ec2_client.create_route_table(VpcId=vpc_id)
        route_table = response.get("RouteTable")
        print(route_table)
        route_table_id = route_table.get("RouteTableId")
        print("Route table id", route_table_id)
        return route_table_id

3) Associate subnet and route:
invoke this function inside main function
attach_subnet_to_route(private_subnet_id, private_rtb_id)

def attach_subnet_to_route(subnet_id, rtb_id):
    response = ec2_client.associate_route_table(
        RouteTableId=rtb_id,
        SubnetId=subnet_id
    )